[package]
name = "mx-message"
version = "0.1.9"
edition = "2024"
exclude = [".DS_Store", "/target", ".vscode", ".github"]
authors = ["Plasmatic Engineering <shankar@goplasmatic.io>"]
license = "Apache-2.0"
description = "A fast, type-safe Rust implementation of MXMessage for parsing MX messages."
readme = "README.md"
homepage = "https://github.com/GoPlasmatic/MXMessage"
repository = "https://github.com/GoPlasmatic/MXMessage"
keywords = ["mx", "message", "parsing", "iso20022"]
categories = ["data-structures", "development-tools", "parsing"]


[dependencies]
regex = "1.9.1"
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
chrono = { version = "0.4", features = ["serde"] }
quick-xml = { version = "0.31", features = ["serialize", "overlapped-lists"] }

# Sample generation dependencies
# Note: For now, we'll use rand and uuid directly for sample generation
# datafake-rs integration can be added later when available
rand = "0.8"
uuid = { version = "1.11", features = ["v4", "serde"] }
fake = { version = "2.9", features = ["derive", "chrono"] }

[dev-dependencies]
tempfile = "3.8"
